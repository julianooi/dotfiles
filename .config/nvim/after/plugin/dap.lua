vim.fn.sign_define('DapStopped', {text='â†’', texthl='', linehl='Search', numhl=''})

vim.keymap.set('n', '<F9>', function() require('dap').continue() end, {desc='debug continue'})
vim.keymap.set('n', '<F8>', function() require('dap').step_over() end, {desc='debug step over'})
vim.keymap.set('n', '<F7>', function() require('dap').step_into() end, {desc='debug step into'})
vim.keymap.set('n', '<F6>', function() require('dap').step_out() end, {desc='debug step out'})
vim.keymap.set('n', '<F12>', function() require('dap').terminate() end, {desc='dap terminate'})
vim.keymap.set('n', '<Leader>bp', function() require('dap').toggle_breakpoint() end, {desc='toggle breakpoint'})
vim.keymap.set('n', '<Leader>bc', function() require('dap').set_breakpoint(vim.fn.input('Condition: ')) end, {desc='set conditional breakpoint'})
vim.keymap.set('n', '<Leader>bl', function() require('dap').set_breakpoint(nil, nil, vim.fn.input('Log point message: ')) end, {desc='breakpoint with log'})
vim.keymap.set({'n', 'v'}, '<Leader>be', function() require('dapui').eval() end, {desc='dap eval cursor'})
vim.keymap.set('n', '<Leader>dr', function() require('dap').repl.open() end, {desc='dap repl'})
vim.keymap.set('n', '<Leader>dl', function() require('dap').run_last() end, {desc='dap run last'})
vim.keymap.set('n', '<Leader>pb', function() require('dap').list_breakpoints() end, {desc='dap list breakpoints'})
vim.keymap.set('n', '<Leader>dc', function() require('dap').clear_breapoints() end, {desc='dap clear breakpoints'})
vim.keymap.set({'n', 'v'}, '<Leader>dh', function()
  require('dap.ui.widgets').hover()
end, {desc='dap hover view value under cursor'})
vim.keymap.set({'n', 'v'}, '<Leader>dp', function()
  require('dap.ui.widgets').preview()
end, {desc='dap preview view value under cursor'})
vim.keymap.set('n', '<Leader>df', function()
  local widgets = require('dap.ui.widgets')
  widgets.centered_float(widgets.frames)
end)
vim.keymap.set('n', '<Leader>ds', function()
  local widgets = require('dap.ui.widgets')
  widgets.centered_float(widgets.scopes)
end)
require('dap.ext.vscode').load_launchjs()

